<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Centos7 KVM环境搭建]]></title>
    <url>%2F2018%2F10%2F29%2FCentos%20KVM%2F</url>
    <content type="text"><![CDATA[常用命令查看是否支持CPU虚拟化 grep -E &quot;vmx|svn&quot; /proc/cpuinfo 查看Centos虚拟化版本 cat /etc/redhat-release|cat /etc/centos-release 添加VNC端口 firewall-cmd --permanent --zone=public --add-port=5904-5905/tcp firewall-cmd --reload 重启网络配置 systemctl restart NetworkManager systemctl restart network 支持的CPU models virsh capabilities Centos7安装KVM环境详细步骤 Step 1: Install kvmType the following yum command: # yum install qemu-kvm libvirt libvirt-python libguestfs-tools virt-install Start the libvirtd service: # systemctl enable libvirtd # systemctl start libvirtd Step 2: Verify kvm installation# lsmod | grep -i kvm Step 3: Configure bridged networkingEdit /etc/sysconfig/network-scripts/ifcfg-br0 and add: BOOTPROTO=&quot;dhcp&quot; IPV6INIT=&quot;yes&quot; IPV6_AUTOCONF=&quot;yes&quot; ONBOOT=&quot;yes&quot; TYPE=&quot;Bridge&quot; DELAY=&quot;0&quot; ONBOOT=&quot;yes&quot; OR DEVICE=br1 TYPE=Bridge BOOTPROTO=none ONBOOT=yes NAME=br1 IPADDR=172.21.96.2 NETMASK=255.255.255.0 Modify adaptor “eth0” for bridging. BRIDGE=br0 TYPE=&quot;Ethernet&quot; NAME=&quot;eth0&quot; UUID=&quot;e485829a-8488-4466-99ba-195ac9991f00&quot; DEVICE=&quot;eth0&quot; ONBOOT=&quot;yes&quot; BRIDGE=br0 BOOTPROTO=none OR DEVICE=bond1 ONBOOT=yes TYPE=Bond BONDING_MASTER=yes BONDING_OPTS=&quot;mode=1 miimon=100 primary=eth2 updelay=120000&quot; TYPE=Ethernet BRIDGE=br1 BOOTPROTO=none Then restart network service systemctl restart NetworkManager systemctl restart network Step 4: Create your first virtual machineCREATE CENTOS 7.X VM Import qcow2 disk image can use the following command virt-install --import --name galaxy \ --memory 2048 --vcpus 2 --cpu host \ --disk /opt/image/Galaxy-Image.qcow2,format=qcow2,bus=virtio \ --network bridge=br0,model=virtio \ --os-type=linux \ --os-variant=centos7.0 \ --graphics vnc,listen=0.0.0.0 \ --noautoconsole OR /usr/libexec/qemu-kvm -m 2048 -smp 2 --enable-kvm -boot c -hda /opt/image/Galaxy-Image.qcow2 -vnc :1 Install from CDROM 创建磁盘 qemu-img create -f qcow2 -o cluster_size=2M /opt/image/esp.qcow2 3072G 执行安装（如果已有磁盘文件不用在指定磁盘大小） virt-install \ --virt-type=kvm \ --name centos7 \ --ram 2048 \ --vcpus=1 \ --os-variant=centos7.0 \ --cdrom=/var/lib/libvirt/boot/CentOS-7-x86_64-Minimal-1708.iso \ --network=bridge=br0,model=virtio \ --graphics vnc,listen=0.0.0.0 \ --disk path=/var/lib/libvirt/images/centos7.qcow2,size=40,bus=virtio,format=qcow2 配置virsh consoleecho &quot;ttyS0&quot; &gt;&gt; /etc/securetty 在/etc/grub2.conf文件中,在kernel行添加如下配置console=tty0 console=ttyS0,115200n8: default=0 timeout=5 splashimage=(hd0,0)/grub/splash.xpm.gz hiddenmenu title CentOS (2.6.32-642.4.2.el6.x86_64) root (hd0,0) kernel /vmlinuz-2.6.32-642.4.2.el6.x86_64 ro root=/dev/mapper/vg_linux-lv_root rd_NO_LUKS LANG=en_US.UTF-8 rd_LVM_LV=vg_linux/lv_swap rd_NO_MD rd_LVM_LV=vg_linux/lv_root SYSFONT=latarcyrheb-sun16 crashkernel=auto KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet console=tty0 console=ttyS0,115200n8 initrd /initramfs-2.6.32-642.4.2.el6.x86_64.img 在/etc/inittab中添加agetty: S0:12345:respawn:/sbin/agetty ttyS0 115200, 1152000 xterm 重启 reboot Centos挂载win共享目录Preparing CentOS 7 for Mounting SMB Shares 1.Install the cifs-utils package from the default CentOS yum repository. yum install cifs-utils 2.Next, we need an account on the CentOS server that will map to the Windows account granted permission to the SMB share, _share_library_core. We’ll create a service account named svc_library_core with a user id (UID) of 5000. useradd -u 5000 svc_library_core 3.We also want a group on the CentOS server that will map to the share. This group will contain all of the Linux accounts that will need access to the share. Our account will be called share_library_core and it will have a group id (gid) of 6000. groupadd -g 6000 share_library_core 4.Finally, add any Linux accounts that require access to the SMB share to the newly created Linux group. I have an existing account named user1 that I will add to the share_library_core group. usermod -G share_library_core -a zh Mounting an SMB Share1.Create a directory to mount the SMB share into. We’ll mount the share in a directory called lib_core. mkdir -p /mnt/share/ 2Using the mount.cifs command, mount the SMB share into lib_core using the Active Directory user account _share_library_core. We need to map the UID of our svc_library_core account (5000) and the gid of our share_library_core group (6000) to the SMB share. mount.cifs -o vers=2.0,user=wiwiz,pass=&quot;zhangheng2&quot;,uid=5000,gid=6000 //172.16.1.105/BaiduNetdiskDownload /mnt/share/]]></content>
      <categories>
        <category>Virtualization</category>
        <category>KVM</category>
      </categories>
      <tags>
        <tag>虚拟化</tag>
        <tag>Linux</tag>
        <tag>Centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hyper-V环境搭建]]></title>
    <url>%2F2018%2F10%2F29%2FHyper-v%2F</url>
    <content type="text"><![CDATA[开启CPU嵌套虚拟化(Nested Virtualization)Microsoft 嵌套虚拟化技术 1.以管理员额身份打开PowerShell 2.允许运行未经签名的脚本 set-executionpolicy remotesigned 3.使用如下命令开启嵌套虚拟化技术，并在执行过程检查是否满足相关需求 Invoke-WebRequest https://raw.githubusercontent.com/Microsoft/Virtualization-Documentation/master/hyperv-tools/Nested/Enable-NestedVm.ps1 -OutFile ~/Enable-NestedVm.ps1 ~/Enable-NestedVm.ps1 -VmName &lt;VmName&gt; 命令执行结果： 4.开启虚机确认结果 grep -E &quot;vmx|svn&quot; /proc/cpuinfo]]></content>
      <categories>
        <category>Virtualization</category>
        <category>Microsoft</category>
      </categories>
      <tags>
        <tag>虚拟化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo建站]]></title>
    <url>%2F2018%2F10%2F23%2Fnodejs_hexo%2F</url>
    <content type="text"><![CDATA[hexo建站官方文档 准备1.安装git win win下设置git bash代理方法 export http_proxy=&quot;http://127.0.0.1:1083&quot; export https_proxy=&quot;http://127.0.0.1:1083&quot; # 如果报错SSL certificate problem: unable to get local issuer certificate git config --global http.sslVerify false 2.安装npm 安装包安装 # tar xf node-v10.9.0-linux-x64.tar.xz // 解压 # cd node-v10.9.0-linux-x64/ // 进入解压目录 # ./bin/node -v // 执行node命令 查看版本 ln -s /opt/node-v8.12.0-linux-x64/bin/npm /usr/local/bin/ ln -s /opt/node-v8.12.0-linux-x64/bin/node /usr/local/bin/ 编译安装 通过nvm安装 $ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh nvm install stable 修改源地址为淘宝 NPM 镜像 npm config set registry http://registry.npm.taobao.org/ 修改源地址为官方源 npm config set registry https://registry.npmjs.org/ 安装Hexonpm install -g hexo-cli 建站安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件 $ hexo init &lt;folder&gt; $ cd &lt;folder&gt; $ npm install 新建完成后，指定文件夹的目录如下： ./doc/ ├── _config.yml ├── node_modules ├── package.json ├── package-lock.json ├── scaffolds ├── source └── themes 启动服务器 hexo server 这时候，访问 http://localhost:4000/ 就可以看到 主题Hexo提供了默认主题landscape，其他主题。如果使用Next主题，方法： $ cd blog $ git clone https://github.com/theme-next/hexo-theme-next themes/next/ 然后在修改/blog/config.yml文件，将其中的theme改成next theme: next 添加按钮Next主题默认按钮是Home、Archive，我们一般会加上tag about category serach。主题的文件夹(./themes/next/)下找到_config.yml文件。在主题配置文件找到menu字段: menu: home: / || home #about: /about/ || user tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat https://www.jianshu.com/p/84a8384be1aehttps://callmewing.com/2017/04/17/Hexo%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90GitBook/ https://juejin.im/post/5a6ee00ef265da3e4b770ac1https://theme-next.iissnan.com/third-party-services.html#algolia-search]]></content>
      <categories>
        <category>Document</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python环境搭建]]></title>
    <url>%2F2018%2F10%2F17%2Fpython%2F</url>
    <content type="text"><![CDATA[虚拟环境配置1.安装pipTo install pip, securely download get-pip.py. [1]: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py Inspect get-pip.py for any malevolence. Then run the following: python get-pip.py Upgrading pipOn Linux or macOS: pip install -U pip On Windows [4]: python -m pip install -U pip 国内镜像 阿里云 http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 豆瓣(douban) http://pypi.douban.com/simple/ 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ 2.安装 virtualenvpip install virtualenv 3.安装 virtualenvwrapperpip install virtualenvwrapper #命令生效 if [ -f /usr/bin/virtualenvwrapper.sh ]; then export WORKON_HOME=$HOME/.virtualenvs source /usr/bin/virtualenvwrapper.sh fi 常用命令 mkvirtualenv dev lsvirtualenv -b # 列出虚拟环境 workon [虚拟环境名称] # 切换虚拟环境 lssitepackages # 查看环境里安装了哪些包 cdvirtualenv [子目录名] # 进入当前环境的目录 cpvirtualenv [source] [dest] # 复制虚拟环境 deactivate # 退出虚拟环境 rmvirtualenv [虚拟环境名称] # 删除虚拟环境 4.安装pylintpip install pylint 官方说明]]></content>
      <categories>
        <category>Develop</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
